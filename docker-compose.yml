version: '3.8'

services:
  db:
    image: postgres:15
    container_name: language_learning_tool_db
    restart: always
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
      POSTGRES_DB: language_learning_tool
    ports:
      - "5432:5432"  # Expose PostgreSQL port for external tools (optional)
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d  # Add initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d language_learning_tool"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: language_learning_tool_web
    depends_on:
      db:
        condition: service_healthy  # Wait for database to be ready
    ports:
      - "5001:5000"
    volumes:
      - ./app/static/audio:/app/app/static/audio
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppassword
      - POSTGRES_DB=language_learning_tool
    networks:
      - app_network

  nginx:
    image: nginx:1.25  # Updated from 1.27 to latest stable version
    container_name: language_learning_tool_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/var/www/html/static
      - ./app/static/audio:/var/www/html/media
    depends_on:
      - web
    networks:
      - app_network

volumes:
  pgdata:

networks:
  app_network: