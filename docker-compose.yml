version: '3.8'

services:
  db:
    image: postgres:15
    container_name: language_learning_tool_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
    ports:
      - "5432:5432"  # Expose PostgreSQL port for external tools (optional)
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d  # Add initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: language_learning_tool_web
    depends_on:
      db:
        condition: service_healthy  # Wait for database to be ready
    ports:
      - "5001:5000"
    volumes:
      - ./app/static/audio:/app/app/static/audio
      - ./app/static/uploads/covers:/app/app/static/uploads/covers
    env_file:
      - .env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=${FLASK_ENV}
      - PYTHONPATH=/app
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network

  nginx:
    image: nginx:1.25  # Updated from 1.27 to latest stable version
    container_name: language_learning_tool_nginx
    ports:
      - "81:80"
      - "8443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/var/www/html/static
      - ./app/static/audio:/var/www/html/media
    depends_on:
      - web
    networks:
      - app_network

volumes:
  pgdata:

networks:
  app_network: