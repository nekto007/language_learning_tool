"""
Add new achievements to the system
"""
from app import create_app
from app.utils.db import db
from app.study.models import Achievement

NEW_ACHIEVEMENTS = [
    # Book reading achievements
    {
        'code': 'first_book',
        'name': '–ü–µ—Ä–≤–∞—è –∫–Ω–∏–≥–∞',
        'description': '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É –¥–æ –∫–æ–Ω—Ü–∞',
        'icon': 'üìñ',
        'xp_reward': 100,
        'category': 'books'
    },
    {
        'code': 'books_5',
        'name': '–ö–Ω–∏–≥–æ–ª—é–±',
        'description': '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ 5 –∫–Ω–∏–≥',
        'icon': 'üìö',
        'xp_reward': 300,
        'category': 'books'
    },
    {
        'code': 'books_10',
        'name': '–ë–∏–±–ª–∏–æ—Ñ–∏–ª',
        'description': '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ 10 –∫–Ω–∏–≥',
        'icon': 'üìï',
        'xp_reward': 600,
        'category': 'books'
    },
    {
        'code': 'chapter_marathon',
        'name': '–ú–∞—Ä–∞—Ñ–æ–Ω –≥–ª–∞–≤',
        'description': '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ 50 –≥–ª–∞–≤',
        'icon': 'üèÉ',
        'xp_reward': 250,
        'category': 'books'
    },

    # Flashcard achievements
    {
        'code': 'cards_100',
        'name': '–ö–∞—Ä—Ç–æ—á–Ω—ã–π –Ω–æ–≤–∏—á–æ–∫',
        'description': '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 100 –∫–∞—Ä—Ç–æ—á–µ–∫',
        'icon': 'üé¥',
        'xp_reward': 100,
        'category': 'flashcards'
    },
    {
        'code': 'cards_500',
        'name': '–ö–∞—Ä—Ç–æ—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä',
        'description': '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 500 –∫–∞—Ä—Ç–æ—á–µ–∫',
        'icon': 'üÉè',
        'xp_reward': 300,
        'category': 'flashcards'
    },
    {
        'code': 'cards_1000',
        'name': '–ö–∞—Ä—Ç–æ—á–Ω—ã–π –≥—É—Ä—É',
        'description': '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 1000 –∫–∞—Ä—Ç–æ—á–µ–∫',
        'icon': 'üëë',
        'xp_reward': 600,
        'category': 'flashcards'
    },
    {
        'code': 'perfect_session',
        'name': '–ò–¥–µ–∞–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ—Å—Å–∏—é –∫–∞—Ä—Ç–æ—á–µ–∫ —Å 100% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤',
        'icon': 'üíØ',
        'xp_reward': 75,
        'category': 'flashcards'
    },

    # Matching game achievements
    {
        'code': 'matching_first',
        'name': '–ü–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—É—é –∏–≥—Ä—É –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ',
        'icon': 'üéØ',
        'xp_reward': 25,
        'category': 'matching'
    },
    {
        'code': 'matching_perfect',
        'name': '–ò–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∏–≥—Ä—É —Å–æ 100% —Ç–æ—á–Ω–æ—Å—Ç—å—é',
        'icon': 'üéä',
        'xp_reward': 50,
        'category': 'matching'
    },
    {
        'code': 'matching_speed',
        'name': '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∏–≥—Ä—É –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –∑–∞ 1 –º–∏–Ω—É—Ç—É',
        'icon': '‚ö°',
        'xp_reward': 40,
        'category': 'matching'
    },

    # Lesson achievements
    {
        'code': 'lessons_10',
        'name': '–£—á–µ–Ω–∏–∫',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 —É—Ä–æ–∫–æ–≤',
        'icon': 'üéì',
        'xp_reward': 150,
        'category': 'lessons'
    },
    {
        'code': 'lessons_50',
        'name': '–û—Ç–ª–∏—á–Ω–∏–∫',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 50 —É—Ä–æ–∫–æ–≤',
        'icon': 'üìú',
        'xp_reward': 500,
        'category': 'lessons'
    },
    {
        'code': 'lessons_100',
        'name': '–ú–∞–≥–∏—Å—Ç—Ä',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 100 —É—Ä–æ–∫–æ–≤',
        'icon': 'üèÜ',
        'xp_reward': 1000,
        'category': 'lessons'
    },

    # Streak achievements (extending existing)
    {
        'code': 'daily_streak_14',
        'name': '–î–≤–µ –Ω–µ–¥–µ–ª–∏ –ø–æ–¥—Ä—è–¥',
        'description': '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 14 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'icon': 'üìÜ',
        'xp_reward': 300,
        'category': 'streak'
    },
    {
        'code': 'daily_streak_60',
        'name': '–î–≤–∞ –º–µ—Å—è—Ü–∞ –ø–æ–¥—Ä—è–¥',
        'description': '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 60 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'icon': 'üìä',
        'xp_reward': 1000,
        'category': 'streak'
    },
    {
        'code': 'daily_streak_100',
        'name': '–°—Ç–æ –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'description': '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 100 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'icon': 'üí™',
        'xp_reward': 2000,
        'category': 'streak'
    },

    # Level milestones
    {
        'code': 'level_10',
        'name': '–î–µ—Å—è—Ç–∫–∞',
        'description': '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 10 —É—Ä–æ–≤–Ω—è',
        'icon': 'üîü',
        'xp_reward': 100,
        'category': 'levels'
    },
    {
        'code': 'level_25',
        'name': '–ß–µ—Ç–≤–µ—Ä—Ç—å —Å–æ—Ç–Ω–∏',
        'description': '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 25 —É—Ä–æ–≤–Ω—è',
        'icon': 'üéØ',
        'xp_reward': 250,
        'category': 'levels'
    },
    {
        'code': 'level_50',
        'name': '–ü–æ–ª—É—Å–æ—Ç–Ω—è',
        'description': '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 50 —É—Ä–æ–≤–Ω—è',
        'icon': 'üåü',
        'xp_reward': 500,
        'category': 'levels'
    },
]


def add_achievements():
    """Add new achievements to database"""
    app = create_app()

    with app.app_context():
        print("Adding new achievements...")

        added = 0
        skipped = 0

        for achievement_data in NEW_ACHIEVEMENTS:
            # Check if achievement already exists
            existing = Achievement.query.filter_by(code=achievement_data['code']).first()

            if existing:
                print(f"‚ö†Ô∏è  Skipped '{achievement_data['name']}' (already exists)")
                skipped += 1
                continue

            # Add new achievement
            achievement = Achievement(**achievement_data)
            db.session.add(achievement)
            print(f"‚úì Added '{achievement_data['name']}'")
            added += 1

        db.session.commit()

        print("\n" + "="*60)
        print("ACHIEVEMENTS UPDATE COMPLETED")
        print("="*60)
        print(f"Added: {added} new achievements")
        print(f"Skipped: {skipped} existing achievements")
        print(f"\nTotal achievements in database: {Achievement.query.count()}")


if __name__ == '__main__':
    add_achievements()
