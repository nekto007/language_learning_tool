"""
Migration script to add XP system and achievements tables.
Run this script to create the new tables and populate initial achievements.
"""
import os
import sys

# Add the app directory to the Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app
from app.utils.db import db
from app.study.models import UserXP, Achievement, UserAchievement

# Initial achievements to populate
INITIAL_ACHIEVEMENTS = [
    {
        'code': 'first_quiz',
        'name': '–ü–µ—Ä–≤—ã–π –∫–≤–∏–∑',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–≤–∏–∑',
        'icon': 'üéØ',
        'xp_reward': 50,
        'category': 'quiz'
    },
    {
        'code': 'perfect_score',
        'name': '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
        'description': '–ü–æ–ª—É—á–∏—Ç–µ 100% –≤ –∫–≤–∏–∑–µ',
        'icon': 'üíØ',
        'xp_reward': 100,
        'category': 'quiz'
    },
    {
        'code': 'speed_demon',
        'name': '–°–ø–∏–¥—Ä–∞–Ω',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫–≤–∏–∑ –∏–∑ 10+ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ 2 –º–∏–Ω—É—Ç—ã',
        'icon': '‚ö°',
        'xp_reward': 75,
        'category': 'quiz'
    },
    {
        'code': 'quiz_streak_5',
        'name': '–°–µ—Ä–∏—è –∏–∑ 5',
        'description': '–û—Ç–≤–µ—Ç—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥',
        'icon': 'üî•',
        'xp_reward': 50,
        'category': 'quiz'
    },
    {
        'code': 'quiz_master_10',
        'name': '–ú–∞—Å—Ç–µ—Ä –∫–≤–∏–∑–æ–≤',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 –∫–≤–∏–∑–æ–≤',
        'icon': 'üèÜ',
        'xp_reward': 150,
        'category': 'quiz'
    },
    {
        'code': 'quiz_master_50',
        'name': '–ì—É—Ä—É –∫–≤–∏–∑–æ–≤',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 50 –∫–≤–∏–∑–æ–≤',
        'icon': 'üëë',
        'xp_reward': 500,
        'category': 'quiz'
    },
    {
        'code': 'high_score_90',
        'name': '–û—Ç–ª–∏—á–Ω–∏–∫',
        'description': '–ü–æ–ª—É—á–∏—Ç–µ 90%+ –≤ –∫–≤–∏–∑–µ –∏–∑ 10+ –≤–æ–ø—Ä–æ—Å–æ–≤',
        'icon': '‚≠ê',
        'xp_reward': 50,
        'category': 'quiz'
    },
    {
        'code': 'words_learned_100',
        'name': '–ü–æ–ª–∏–≥–ª–æ—Ç',
        'description': '–ò–∑—É—á–∏—Ç–µ 100 —Å–ª–æ–≤',
        'icon': 'üìö',
        'xp_reward': 200,
        'category': 'study'
    },
    {
        'code': 'words_learned_500',
        'name': '–ú–∞—Å—Ç–µ—Ä —Å–ª–æ–≤',
        'description': '–ò–∑—É—á–∏—Ç–µ 500 —Å–ª–æ–≤',
        'icon': 'üéì',
        'xp_reward': 1000,
        'category': 'study'
    },
    {
        'code': 'daily_streak_7',
        'name': '–ù–µ–¥–µ–ª—è –ø–æ–¥—Ä—è–¥',
        'description': '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'icon': 'üìÖ',
        'xp_reward': 150,
        'category': 'streak'
    },
    {
        'code': 'daily_streak_30',
        'name': '–ú–µ—Å—è—Ü –ø–æ–¥—Ä—è–¥',
        'description': '–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        'icon': 'üóìÔ∏è',
        'xp_reward': 500,
        'category': 'streak'
    },
    {
        'code': 'early_bird',
        'name': '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫–≤–∏–∑ –¥–æ 8:00 —É—Ç—Ä–∞',
        'icon': 'üåÖ',
        'xp_reward': 25,
        'category': 'special'
    },
    {
        'code': 'night_owl',
        'name': '–°–æ–≤–∞',
        'description': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫–≤–∏–∑ –ø–æ—Å–ª–µ 23:00',
        'icon': 'ü¶â',
        'xp_reward': 25,
        'category': 'special'
    },
]


def run_migration():
    """Create tables and populate initial data"""
    app = create_app()

    with app.app_context():
        print("Creating XP system tables...")

        # Create tables
        db.create_all()
        print("‚úì Tables created successfully")

        # Check if achievements already exist
        existing = Achievement.query.count()
        if existing > 0:
            print(f"‚ö†Ô∏è  Found {existing} existing achievements. Skipping initial data.")
            return

        # Populate initial achievements
        print("Populating initial achievements...")
        for achievement_data in INITIAL_ACHIEVEMENTS:
            achievement = Achievement(**achievement_data)
            db.session.add(achievement)

        db.session.commit()
        print(f"‚úì Added {len(INITIAL_ACHIEVEMENTS)} achievements")

        # Show summary
        print("\n" + "="*60)
        print("XP SYSTEM MIGRATION COMPLETED SUCCESSFULLY")
        print("="*60)
        print(f"Tables created: user_xp, achievements, user_achievements")
        print(f"Achievements added: {len(INITIAL_ACHIEVEMENTS)}")
        print("\nAchievement categories:")
        categories = {}
        for ach in INITIAL_ACHIEVEMENTS:
            cat = ach['category']
            categories[cat] = categories.get(cat, 0) + 1
        for cat, count in categories.items():
            print(f"  - {cat}: {count}")
        print("="*60)


if __name__ == '__main__':
    run_migration()
